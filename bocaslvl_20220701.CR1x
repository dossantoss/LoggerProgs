'For programming tips, copy this address to your browser
'search window:https://www.campbellsci.com/videos/datalogger-programming
'CR1000X Series Datalogger
'date: May 22, 2019, Initial version by Sergio dos Santos - STRI
'edited by Roy Rich 8-15-2019 changed scan sample rate to 30seconds.
'edited by Sergio dos Santos 12-12-2019 replaced pressure (water depth) by CS456 sensor
'edited by Roy Rich 10-08-2021 replace radar guage, change sonde to rs232 communication, and make tables consistent with other MARINEGEO SITES
'water depth based on temperature dependant water density calculations
'edited by Sergio dos Santos - Installation of new radar CS475-A - Edited Radar code
'Edited by Sergio dos Santos - 2022-07-01 - Installed CS456 Vented pressure gauge

SequentialMode

'-------------------Constants--------------------------------
'Declare Constants
Const labelBatt= "BAT"
Const labelPRS = "PRS"
Const labelRAD = "RAD"
Const labelSWUP = "SWU"
Const labelSWLOW = "SWL"

'-----------------Program varibles-------------------------
'Declare Public Variables
'Pakbus ID
Public PBID As Long
'Battery variable
Public BattV


'***********************************************************
'##Water pressure tide gauge
'CS456 array var. and Wdepth
Public Wdepth
Public CS450(2)
'CS450 array definition
Alias CS450(1)=Wpress
Alias CS450(2)=Wtemp

'##Radar tide gauge
'Radar array var.
Public CS475A(4)
'Radar array definition
Alias CS475A(1)=Stage_nouse 'No use
Alias CS475A(2)=Wdistanceft
Alias CS475A(3)=Rvoltage    'No use
Alias CS475A(4)=Radar_validity
Public Wdistance

'##Tide switches
'Switch variables
Public Switch_upp
Public Switch_low

'##Barometer
'BAR pressure variables
Public BP_mmHg
Public BP_mbar
'**********************************************************



'EXO2 variables
Public EXO(27) 
Public EXO2(4)As String *72 
'EXO2 array definition

'Sonde array definition
Public Sonde_data As String *1000  'SNs
Public Sonde_data2 As String *1000  'SNs

Public pSonde_data As String *1000  'SNs
Public pSonde_data2 As String *1000  'SNs

Units Date = mmddyy
Units Time = hhmmss
Units Chlorophyll_RFU = RFU
Units Chlorophyll_ugL = ug/L
Units Conductivity = uS/cm
Units FDOM_QSU = QSU
Units FDOM_RFU = RFU
Units NLF_conductivity = uS/cm 
Units ODO_sat = %Sat
Units ODO_local = %SatLocal
Units ODO_MgL = mg/L
Units Pressure_psia =psia
Units Salinity_PPT =ppt
Units Specific_Conductivity_uScm =uS/cm
Units BGA_PE_RFU = RFU
Units BGA_PE_ugL =ug/L
Units TDS_mg_L = mg/L
Units Turbidity_FNU = FNU
Units Wiper_Position_mv =mv
Units pH = pH
Units pH_mv = mv
Units Temp_C = Celsius
Units Depth_m = meters
Units Battery_v = volts
Units Cable_v= volts
Units Wiper_Current_ma= ma
Units TSS_MgL = mg/L
Alias EXO2(1)=sn 
Alias EXO2(2)=snn

'2021 revised exo2 variables
Alias EXO(1)=Date
Alias EXO(2)=Time
Alias EXO(3)=Chlorophyll_RFU
Alias EXO(4)=Chlorophyll_ugL
Alias EXO(5)=Conductivity
Alias EXO(6)=FDOM_QSU
Alias EXO(7)=FDOM_RFU
Alias EXO(8)=NLF_conductivity
Alias EXO(9)=ODO_sat
Alias EXO(10)=ODO_local
Alias EXO(11)=ODO_MgL
Alias EXO(12)=Pressure_psia
Alias EXO(13)=Salinity_PPT
Alias EXO(14)=Specific_Conductivity_uScm
Alias EXO(15)=BGA_PE_RFU
Alias EXO(16)=BGA_PE_ugL
Alias EXO(17)=TDS_mg_L
Alias EXO(18)=Turbidity_FNU
Alias EXO(19)=TSS_MgL
Alias EXO(20)=Wiper_Position_mv
Alias EXO(21)=pH
Alias EXO(22)=pH_mv
Alias EXO(23)=Temp_C
Alias EXO(24)=Depth_m
Alias EXO(25)=Battery_v
Alias EXO(26)=Cable_v
Alias EXO(27)=Wiper_Current_ma

''##EXO2 variables
'Public EXO(22) 
''EXO2 array definition
'Alias EXO(1)=WaterTemp
'Alias EXO(2)=SpCond
'Alias EXO(3)=Cond
'Alias EXO(4)=TDS
'Alias EXO(5)=Salinity
'Alias EXO(6)=ODOSat
'Alias EXO(7)=ODO
'Alias EXO(8)=Pressure
'Alias EXO(9)=Depth
'Alias EXO(10)=PH
'Alias EXO(11)=Turbidity
'Alias EXO(12)=FCholophyll
'Alias EXO(13)=MChlorophyll
'Alias EXO(14)=FAlgae
'Alias EXO(15)=MAlgae
'Alias EXO(16)=fDom
'Alias EXO(17)=QSEfDom
'Alias EXO(18)=EXOBattV
'Alias EXO(19)=CablePwr
'Alias EXO(20)=WiperPos
'Alias EXO(21)=WiperPCurr
'Alias EXO(22)=pHmv
'
'##Goes transmission
'Result_code=0 => Sucessfull data transfer to TX320
Public Result_code
'Array variable for current status of TX320
Public TX320Stat(13)
'Array for GPS Time
Public gps(4)

'-----------------Units Declaration------------------------
'Units declaration battery
Units BattV=Volts

'Units declaration pressure sens.-CS456.
Units Wdepth=m
Units Wpress=KPa
Units Wtemp=Celsius

'Units declaration switch
Units Switch_upp=On/Off
Units Switch_low=On/Off

'Units declaration radar
Units Wdistance=m
Units Radar_validity = 0/1

''Units declaration EXO2
'Units WaterTemp = Celsius
'Units SpCond = mS/cm
'Units Cond = mS/cm
'Units TDS = g/l
'Units Salinity = psu
'Units ODOSat = % 
'Units ODO = mg/l
'Units Pressure = psi
'Units Depth = m
'Units Turbidity = FNU
'Units FCholophyll = RFU
'Units MChlorophyll = micro-gram/l
'Units FAlgae = RFU
'Units MAlgae = micro-gram/lPE
'Units fDom = RFU
'Units QSEfDom = ppbQSE
'Units EXOBattV = volts
'Units CablePwr = volts
'Units WiperPos = volts
'Units WiperPCurr = mA
'Units pHmv = mv

'Units Bar Pressure
Units BP_mmHg=mmHg
Units BP_mbar=millibar


'----------TIDE DATA TABLE - 6 min -------------------------
'Six minute Tide data table
DataTable(Tide,True,-1)
  DataInterval(0,6,Min,10)
  Sample(1,PBID,UINT2)
  FieldNames ("PBID:PBID")
  Average(1,BattV,FP2,False)
  Average(1,Wdepth,FP2,False)
  Average(1,Wdistance,FP2,False)
  Average(1,Switch_upp,FP2,False)
  Average(1,Switch_low,FP2,False)
  Sample (1,Radar_validity,UINT2)
  Average(1,BP_mbar,FP2,False)
  Average(1,BP_mmHg,Fp2,False)
  Average(1,Wtemp,FP2,False)
EndTable

'----------TSUNAMI TABLES -----------------------------
'Header Tsunami-table for pressure sensor
DataTable(TsunamiTablePRSHead,True,1)
  DataInterval(0,5,Min,10)
  Sample (1,labelPRS,String)
  FieldNames("labelPRS")
EndTable
'One minute data table-Tsunami Pressure sensor reading(mm)
DataTable(TsunamiTablePRS,True,-1)
  DataInterval(0,1,Min,10)
  Average(1,Wdepth*1000,FP2,False)
  FieldNames("Wdepth")
EndTable

'Header Tsunami-table for radar sensor
DataTable(TsunamiTableRADHead,True,1)
  DataInterval(0,5,Min,10)
  Sample (1,labelRAD,String)
  FieldNames("labelRAD")
EndTable
'One minute data table-Tsunami Radar sensor reading(mm)
DataTable(TsunamiTableRAD,True,-1)
  DataInterval(0,1,Min,10)
  Average(1,Wdistance*1000,FP2,False)
  FieldNames("Wdistance")
EndTable

'Five minute data table_Tsunami switch and Battery
DataTable(TsunamiTableSW,True,-1)
  DataInterval(0,5,Min,10)
  'Switch-up
  Sample (1,labelSWUP,String)
  FieldNames("SWUP")
  Average(1,Switch_upp,UINT2,False)
  FieldNames("Switch_upp")
  'Switch_low
  Sample (1,labelSWLOW,String)
  FieldNames("SWLOW")
  Average(1,Switch_low,UINT2,False)
  FieldNames("Switch_low")
  'Battery
  Sample (1,labelBatt,String)
  FieldNames("BAT")
  Average(1,BattV,FP2,False)
  FieldNames("BattV")
EndTable

'------------Exo2Table----------------combined 2021
DataTable(EXOTable,TRUE,-1)
  DataInterval (0,6,Min,10)
Sample(1,Date,IEEE4)
Sample(1,Time,IEEE4)
Sample(1,Chlorophyll_RFU,IEEE4)
Sample(1,Chlorophyll_ugL,IEEE4)
Sample(1,Conductivity,IEEE4)
Sample(1,FDOM_QSU,IEEE4)
Sample(1,FDOM_RFU,IEEE4)
Sample(1,NLF_conductivity,IEEE4)
Sample(1,ODO_sat,IEEE4)
Sample(1,ODO_local,IEEE4)
Sample(1,ODO_MgL,IEEE4)
Sample(1,Pressure_psia,IEEE4)
Sample(1,Salinity_PPT,IEEE4)
Sample(1,Specific_Conductivity_uScm,IEEE4)
Sample(1,BGA_PE_RFU,IEEE4)
Sample(1,BGA_PE_ugL,IEEE4)
Sample(1,TDS_mg_L,IEEE4)
Sample(1,Turbidity_FNU,IEEE4)
Sample(1,Wiper_Position_mv,IEEE4)
Sample(1,pH,IEEE4)
Sample(1,pH_mv,IEEE4)
Sample(1,Temp_C,IEEE4)
Sample(1,Depth_m,IEEE4)
Sample(1, Battery_v,IEEE4)
Sample(1, Cable_v,IEEE4)
Sample(1, Wiper_Current_ma,IEEE4)
  
Sample (1,sn,String)
Sample (1,snn,String)
EndTable

''------------EXO2 Table Water Measuremts----------------
'DataTable(EXOTable,TRUE,-1)
'  DataInterval (0,6,Min,10)
'  Sample(1,WaterTemp,FP2)
'  Sample (1,SpCond,FP2)
'  Sample (1,Cond,FP2)
'  Sample (1,TDS,FP2)
'  Sample (1,Salinity,FP2)
'  Sample (1,ODOSat,FP2)
'  Sample (1,ODO,FP2)
'  Sample (1,Pressure,FP2)
'  Sample (1,Depth,FP2)
'  Sample (1,PH,FP2)
'  Sample (1,Turbidity,FP2)
'  Sample (1,FCholophyll,FP2)
'  Sample (1,MChlorophyll,FP2)
'  Sample (1,FAlgae,FP2)
'  Sample (1,MAlgae,FP2)
'  Sample (1,fDom,FP2)
'  Sample (1,QSEfDom,FP2)
'  Sample (1,pHmv,FP2)
'EndTable
'
''------------EXO2 Table Sonde Diagnostics----------------
'DataTable(EXODiag,TRUE,-1)
'  DataInterval (0,6,Min,10)
'  Sample (1,EXOBattV,FP2)
'  Sample (1,CablePwr,FP2)
'  Sample (1,WiperPos,FP2)
'  Sample (1,WiperPCurr,FP2)
'EndTable
'
'----------HEALTH TABLE----------------
'Station health table
DataTable(Table2,True,-1)
  DataInterval(0,1440,Min,10)
  Minimum(1,BattV,FP2,False,False)
EndTable

'----------------------PROGRAM--------------------------------
BeginProg
  'Main Program with extra buffers because of transmission demands
	Scan (30,Sec,10,0)
		  Battery (BattV)
		 '-------pressure reading(CS456)-----
		 'CS456 Pressure Transducer measurements(M3!) Wpress_Kpa AND Temp_C
		  SDI12Recorder(CS450(),C5,"0","M3!",1,0,-1)
		 	 
     '-old code-----radar reading-----------------------------------
     'Generic SDI-12 Sensor measurements Result1, Result2, Result3,
     'Result4, Result5, Result6, Result7, Result8, and Result9
     'SDI12Recorder(Radar(),C3,"0","M!",1,0)
     'Radar readings need to be inverted and coverted from feet to meters
      'Wdistance = Wdistanceft * (-1) * (0.3048)

'----newcode  CS475A code, SDI address = 0 
     'CS475A Radar Water Level Sensor (stage) measurements 'Stage', 'Distance', 'BattV_CS475A' and, 'Error_Code'
     SDI12Recorder(CS475A(),C3,"0","M!",1,0,-1)
    'Radar readings need to be inverted and coverted from feet to meters (SERGIO LOOK AT THIS) 
     Wdistance = Wdistanceft * (-1) * (0.3048)

     '------switch reading----------------------------------
     'swithc1-Generic Control Port Status measurement PStat
      PortGet(Switch_low,C1)
      Switch_low = Switch_low *60
     'switch2-Generic Control Port Status measurement PStat
      PortGet(Switch_upp,C2)
      Switch_upp = Switch_upp *60
      
     '------barometer (bar) pressure reading----------------
      PortSet(C4,1) 'Set port 4 (C4) to high - turns on the BP sensor
		 'Apply a 2 s delay (That is the time needed for the sensor to warmup
		  Delay(0,2,sec)
		 'Power lines in Panama are 60Hz - use a _60Hz noise filter
		 'The following line will make a single ended measurement (H1) of bar pressure in mb   
		  VoltSe(BP_mbar,1,mV5000,6,True,0,_60Hz,0.24,500)
		 'Multiply the above line by 0.75006 to get pressure in mmHg
		  BP_mmHg=BP_mbar*0.75006
		  PortSet(C4,0) 'Set port C4 to low - turn off the bar pressure sensor

'     '-------EXO2 Command-----------------------------------
'      If TimeIntoInterval(0,6,Min)
'      SDI12Recorder (EXO(),C3,"1","C!",1.0,0)
'      EndIf

     '-------TX320 Commands---------------------------------
     'Get the current TX320 status
      GOESStatus(TX320Stat(),1)
     'Get the GPS TIME - Should be GMT
      GOESStatus(gps(),0)
            
     'Get the pakbus ID of the logger
     PBID = Status.PakBusAddress
      
     '----Call Data Tables and Store Data---------------------
    CallTable(Tide)
    CallTable(TsunamiTablePRSHead)
    CallTable(TsunamiTablePRS)
    CallTable(TsunamiTableRADHead)
    CallTable(TsunamiTableRAD)
    CallTable(TsunamiTableSW)
    CallTable(Table2)
    CallTable(EXOTable)
   ' CallTable(EXODiag)
    'CallTable EXOTable ' all sonde

    'TX320 Commands
    If TimeIntoInterval(0,5,min)
      'Write Pressure header to GOES buffer 
       GOESData(Result_code,TsunamiTablePRSHead,1,1,1)
      'Append the last 5 Pressure readings to GOES buffer
       GOESData (Result_code,TsunamiTablePRS,8,0,8)
      
      'Append Radar header to GOES buffer
       GOESData(Result_code,TsunamiTableRADHead,1,0,1)
      'Append the last 5 Radar readings to GOES buffer
       GOESData(Result_code,TsunamiTableRAD,8,0,8)
      
      'Append last Switch and Battery reading
       GOESData (Result_code,TsunamiTableSW,1,0,7)
    EndIf

	NextScan
	
	
SlowSequence
Scan (6,min,0,0)

SerialOpen (ComC7,38400,0,0,2500,0)           'ComPort, Baud Rate ()
    
    SerialOut (ComC7,"0" + CHR(13),"?Command",3,10)       'ComPort, Output String (Charater 13 = ^M)
    Delay (1,500,mSec)
    SerialOut (ComC7,"ssn" + CHR(13) + CHR(10),"",1,0)    'Charater 10 = ^J, Line feed (LF).
    Delay (1,500,mSec)
    SerialIn (EXO2(2),ComC7,100,&H0D0A,2000)             'Destination (Raw EXO Data String)
     
    SerialOut (ComC7,"0" + CHR(13),"?Command",3,10)       'ComPort, Output String (Charater 13 = ^M)
    Delay (1,500,mSec)
    SerialOut (ComC7,"sn" + CHR(13) + CHR(10),"",1,0)    'Charater 10 = ^J, Line feed (LF).
    Delay (1,500,mSec)
    SerialIn (EXO2(1),ComC7,100,&H0D0A,2000)             'Destination (Raw EXO Data String)
    Delay (1,500,mSec)
    
    
    SerialOut (ComC7,"0" + CHR(13),"?Command",3,10)       'ComPort, Output String (Charater 13 = ^M)
    Delay (1,500,mSec)
    SerialOut (ComC7,"para 52 54 194 193 4 228 227 237 211 214 212 20 12" + CHR(13) + CHR(10),"",1,0)    'Charater 10 = ^J, Line feed (LF).
    Delay (1,500,mSec)
    SerialOut (ComC7,"0" + CHR(13),"?Command",3,10)       'ComPort, Output String (Charater 13 = ^M)
    Delay (1,500,mSec)
    SerialOut (ComC7,"data" + CHR(13) + CHR(10),"",1,0)    'Charater 10 = ^J, Line feed (LF).
    Delay (1,500,mSec)
    SerialIn (Sonde_data,ComC7,100,&H0D0A,1000)             'Destination (Raw EXO Data String)
    Delay (1,500,mSec)
   
    'SerialFlush (ComC7)
    
    SerialOut (ComC7,"0" + CHR(13),"?Command",3,10)       'ComPort, Output String (Charater 13 = ^M)
    Delay (1,500,mSec)
    SerialOut (ComC7,"para 6 218 226 110 223 190 229 18 17 1 22 28 230 239" + CHR(13) + CHR(10),"",1,0)    'Charater 10 = ^J, Line feed (LF).
    Delay (1,500,mSec)
    SerialOut (ComC7,"0" + CHR(13),"?Command",3,10)       'ComPort, Output String (Charater 13 = ^M)
    Delay (1,500,mSec)
    SerialOut (ComC7,"data" + CHR(13) + CHR(10),"",1,0)    'Charater 10 = ^J, Line feed (LF).
    Delay (1,500,mSec)
    SerialIn (Sonde_data2,ComC7,100,&H0D0A,2000)             'Destination (Raw EXO Data String)
    Delay (1,500,mSec)
   
    pSonde_data2 = Sonde_data2  
  
    pSonde_data = Sonde_data   
    Sonde_data = Trim(Sonde_data)                                          'Copies String with no leading or trailing charaters.
    Sonde_data2 = Trim(Sonde_data2)                                          'Copies String with no leading or trailing charaters.  
   
    SplitStr (EXO(1),Sonde_data," ",13,0)
    SplitStr (EXO(14),Sonde_data2," ",14,0)
  
    SerialFlush (ComC7)                                                        'Clears data from buffer
    SerialClose (ComC7)

NextScan
EndProg

